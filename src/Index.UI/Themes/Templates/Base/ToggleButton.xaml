<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region Colors-->
    <SolidColorBrush x:Key="ToggleButton.IsChecked.Background" Color="{DynamicResource Colors.Secondary.Border.Selected}" />
    <SolidColorBrush x:Key="ToggleButton.IsChecked.Border" Color="{DynamicResource Colors.Secondary.Border.Selected}" />
    <SolidColorBrush x:Key="ToggleButton.Pressed.IsChecked.Background" Color="{DynamicResource Colors.Tertiary.Border.Selected}" />
    <SolidColorBrush x:Key="ToggleButton.Pressed.IsChecked.Border" Color="{DynamicResource Colors.Tertiary.Border.Selected}" />
    <SolidColorBrush x:Key="ToggleButton.Hover.IsChecked.Background" Color="{DynamicResource Colors.Quarternary.Border.Selected}" />
    <SolidColorBrush x:Key="ToggleButton.Hover.IsChecked.Border" Color="{DynamicResource Colors.Quarternary.Border.Selected}" />
    <!--#endregion-->

    <!--#region Template: ToggleButtonTemplate-->
    <ControlTemplate x:Key="ToggleButtonTemplate"
                     TargetType="{x:Type ToggleButton}">
        <Border x:Name="PART_Border"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="true">
            <ContentPresenter x:Name="PART_ContentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Focusable="False"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource Button.Defaulted.Border}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource Button.Hover.Background}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource Button.Hover.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource Button.Pressed.Background}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource Button.Disabled.Background}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource Button.Disabled.Border}" />
                <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Button.Disabled.Foreground}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource ToggleButton.IsChecked.Background}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource ToggleButton.IsChecked.Border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource ToggleButton.Pressed.IsChecked.Background}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource ToggleButton.Pressed.IsChecked.Border}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource ToggleButton.Hover.IsChecked.Background}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource ToggleButton.Hover.IsChecked.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Style: ToggleButton -->
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisualStyle}" />
        <Setter Property="Background" Value="{DynamicResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template" Value="{StaticResource ToggleButtonTemplate}" />
    </Style>
    <!--#endregion-->

</ResourceDictionary>