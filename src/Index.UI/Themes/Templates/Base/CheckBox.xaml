<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region Colors-->
    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="{DynamicResource Colors.Secondary.Background.Static}" />
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="{DynamicResource Colors.Secondary.Border.Static}" />
    <SolidColorBrush x:Key="OptionMark.Hover.Background" Color="{DynamicResource Colors.Secondary.Background.Hover}" />
    <SolidColorBrush x:Key="OptionMark.Hover.Border" Color="{DynamicResource Colors.Secondary.Border.Hover}" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="{DynamicResource Colors.Secondary.Background.Disabled}" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="{DynamicResource Colors.Secondary.Border.Disabled}" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="{DynamicResource Colors.Secondary.Background.Pressed}" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="{DynamicResource Colors.Secondary.Border.Pressed}" />
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="{DynamicResource Colors.Glyph.Static}" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="{DynamicResource Colors.Glyph.Pressed}" />
    <SolidColorBrush x:Key="OptionMark.Hover.Glyph" Color="{DynamicResource Colors.Glyph.Hover}" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="{DynamicResource Colors.Glyph.Disabled}" />
    <!--#endregion-->

    <!--#region Template: CheckBoxTemplate-->
    <ControlTemplate x:Key="CheckBoxTemplate"
                     TargetType="{x:Type CheckBox}">
        <Grid x:Name="templateRoot"
              Background="Transparent"
              SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
            </Grid.ColumnDefinitions>
            <Border x:Name="checkBoxBorder"
                    Width="16"
                    Height="16"
                    Margin="1,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}">
                <Grid x:Name="markGrid">
                    <Path x:Name="optionMark"
                          Width="10"
                          Height="9"
                          Margin="1"
                          RenderTransformOrigin="0.5,0.5"
                          Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                          Fill="{DynamicResource OptionMark.Static.Glyph}"
                          Opacity="0"
                          Stretch="None" />
                    <Rectangle x:Name="indeterminateMark"
                               Margin="2"
                               Fill="{DynamicResource OptionMark.Static.Glyph}"
                               Opacity="0" />
                </Grid>
            </Border>
            <ContentPresenter x:Name="contentPresenter"
                              Grid.Column="0"
                              Width="Auto"
                              Margin="22,0,0,0"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Focusable="False"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter TargetName="optionMark" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="-1" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="HasContent" Value="true">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource OptionMarkFocusVisual}" />
                <Setter Property="Padding" Value="4,-1,0,0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource OptionMark.Hover.Background}" />
                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource OptionMark.Hover.Border}" />
                <Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource OptionMark.Hover.Glyph}" />
                <Setter TargetName="indeterminateMark" Property="Fill" Value="{DynamicResource OptionMark.Hover.Glyph}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource OptionMark.Disabled.Background}" />
                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource OptionMark.Disabled.Border}" />
                <Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource OptionMark.Disabled.Glyph}" />
                <Setter TargetName="indeterminateMark" Property="Fill" Value="{DynamicResource OptionMark.Disabled.Glyph}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource OptionMark.Pressed.Background}" />
                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource OptionMark.Pressed.Border}" />
                <Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource OptionMark.Pressed.Glyph}" />
                <Setter TargetName="indeterminateMark" Property="Fill" Value="{DynamicResource OptionMark.Pressed.Glyph}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Style: OptionMarkFocusVisual-->
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Style: CheckBox -->
    <Style TargetType="{x:Type CheckBox}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />-->
        <Setter Property="Background" Value="{DynamicResource OptionMark.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource OptionMark.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource Brushes.Foreground.Static}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{StaticResource CheckBoxTemplate}" />
    </Style>
    <!--#endregion-->

</ResourceDictionary>