<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Index.UI;component/Themes/Templates/Base/GridView.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--#region Colors-->
    <SolidColorBrush x:Key="ListView.Static.Background" Color="{DynamicResource Colors.Primary.Background.Static}" />
    <SolidColorBrush x:Key="ListView.Static.Foreground" Color="{DynamicResource Colors.Foreground.Static}" />
    <SolidColorBrush x:Key="ListView.Static.Border" Color="{DynamicResource Colors.Primary.Border.Static}" />
    <SolidColorBrush x:Key="ListView.Disabled.Background" Color="{DynamicResource Colors.Primary.Background.Disabled}" />
    <SolidColorBrush x:Key="ListView.Disabled.Border" Color="{DynamicResource Colors.Primary.Border.Disabled}" />
    <SolidColorBrush x:Key="ListView.Hover.Background" Color="{DynamicResource Colors.Primary.Background.Hover}" />
    <SolidColorBrush x:Key="ListView.Hover.Border" Color="{DynamicResource Colors.Primary.Border.Hover}" />
    <SolidColorBrush x:Key="ListView.Pressed.Background" Color="{DynamicResource Colors.Primary.Background.Pressed}" />
    <SolidColorBrush x:Key="ListView.Pressed.Border" Color="{DynamicResource Colors.Primary.Border.Pressed}" />

    <SolidColorBrush x:Key="ListViewItem.Foreground.Disabled" Color="{DynamicResource Colors.Foreground.Disabled}" />
    <SolidColorBrush x:Key="ListViewItem.Foreground.Static" Color="{DynamicResource Colors.Foreground.Static}" />
    <SolidColorBrush x:Key="ListViewItem.Hover.Background" Color="{DynamicResource Colors.Secondary.Background.Hover}" />
    <SolidColorBrush x:Key="ListViewItem.Hover.Border" Color="{DynamicResource Colors.Secondary.Border.Hover}" />
    <SolidColorBrush x:Key="ListViewItem.SelectedInactive.Background" Color="{DynamicResource Colors.Secondary.Background.Selected.Inactive}" />
    <SolidColorBrush x:Key="ListViewItem.SelectedInactive.Border" Color="{DynamicResource Colors.Secondary.Border.Selected.Inactive}" />
    <SolidColorBrush x:Key="ListViewItem.SelectedActive.Background" Color="{DynamicResource Colors.Secondary.Background.Selected}" />
    <SolidColorBrush x:Key="ListViewItem.SelectedActive.Border" Color="{DynamicResource Colors.Secondary.Border.Selected}" />
    <!--#endregion-->

    <!--#region Template: ListViewTemplate-->
    <ControlTemplate x:Key="ListViewTemplate"
                     TargetType="{x:Type ListView}">
        <Border x:Name="PART_Border"
                Padding="0"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="True">
            <ScrollViewer Style="{StaticResource GridViewScrollViewerStyle}">
                <ItemsPresenter />
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource ListView.Disabled.Background}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource ListView.Disabled.Border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="True" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Template: ListViewItemTemplate-->
    <ControlTemplate x:Key="ListViewItemTemplate"
                     TargetType="{x:Type ListViewItem}">
        <Border x:Name="PART_Border"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}">
            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource ListViewItem.Hover.Background}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource ListViewItem.Hover.Border}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource ListViewItem.SelectedInactive.Background}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource ListViewItem.SelectedInactive.Border}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource ListViewItem.SelectedActive.Background}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource ListViewItem.SelectedActive.Border}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Border" Property="TextElement.Foreground" Value="{StaticResource ListViewItem.Foreground.Disabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Style: ListView -->
    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{StaticResource ListView.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListView.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ListView.Static.Foreground}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ListViewTemplate}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <!--#endregion-->

    <!--#region Style: ListViewItem-->
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource ListViewItemTemplate}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    </Style>
    <!--#endregion-->

</ResourceDictionary>
